name: Release

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
    paths-ignore:
      - 'CODEOWNERS'
      - '**.md'
      - '.**'

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
        with:
          ref: 'main'
          fetch-depth: 0

      - name: Get next version
        id: next_version
        run: |
          VERSION=$(git tag  | grep -E '^v[0-9]' | sort -V | tail -1)

          major=0
          minor=0
          patch=0

          # break down the version number into it's components
          regex="v([0-9]+).([0-9]+).([0-9]+)"
          if [[ $VERSION =~ $regex ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch="${BASH_REMATCH[3]}"
          fi

          # check paramater to see which number to increment
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'release_major') }}" == "true" ]]; then
            major=$(echo $major+1 | bc)
          elif [[ "${{ contains(github.event.pull_request.labels.*.name, 'release_minor') }}" == "true" ]]; then
            minor=$(echo $minor + 1 | bc)
          elif [[ "${{ contains(github.event.pull_request.labels.*.name, 'release_patch') }}" == "true" ]]; then
            patch=$(echo $patch + 1 | bc)
          else
            patch=$(echo $patch + 1 | bc)
          fi

          NEXTVERSION="v${major}.${minor}.${patch}"
          # NEXTVERSION=$(echo $VERSION | awk -F. -v OFS=. '{$NF++;print}')
          echo "::set-output name=NEXTVERSION::$NEXTVERSION"

      - name: Changelog
        id: changelog
        env:
          NEXTVERSION: ${{ steps.next_version.outputs.NEXTVERSION }}
        run: |
          npx auto-changelog --unreleased-only --latest-version $NEXTVERSION

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.next_version.outputs.NEXTVERSION }}
          release_name: ${{ steps.next_version.outputs.NEXTVERSION }}
          draft: false
          prerelease: false
          body_path: 'CHANGELOG.md'
